@model IEnumerable<practicaPrestamos4.Entidades.Loan>

@{
    ViewData["Title"] = "Préstamos";
}

<div class="card shadow-lg mb-5 bg-body rounded">
    <div class="card-header">
        Préstamos
    </div>
    <div class="card-body">
        <div class="d-flex justify-content-between">
            <a class="btn btn-success float-end me-2" data-bs-toggle="modal" data-bs-target="#newLoanModal">
                <i class="bi bi-plus-circle"></i> Nuevo Préstamo
            </a>
            <a asp-action="OldLoans" class="btn btn-primary float-end">Prestamos terminados</a>

        </div>
        <br />
        <br />
        <br />
        <table id="loansTable" class="table table-striped dt-responsive nowrap table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th># de prestamo</th>
                    <th>Empleado</th>
                    <th>Adeudo</th>
                    <th>Total pagado</th>
                    <th>Restante</th>
                    <th>Periodo de pago</th>
                    <th>Aprobador</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var loan in Model)
                {
                        <tr>
                            <td>@loan.LoanId</td>
                        <td>@loan.Employee?.EmployeeName @loan.Employee?.EmployeeLastname1 @loan.Employee?.EmployeeLastname2</td>
                        <td>@loan.LoanTotalAmountToPay.ToString("C")</td>
                            <td>@loan.LoanTotalPaidCapital.ToString("C")</td>
                        <td>$@(loan.LoanTotalAmountToPay - loan.LoanTotalPaidCapital)</td>
                            <td>@loan.PaymentTypes?.ShortName</td>
                            <td>@loan.User?.Name</td>
                            <td>
                                <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#debtPayment-@loan.LoanId">
                                    Abonar
                                </button>
                                |
                                <button type="button" class="btn btn-outline-success btn-sm" data-bs-toggle="modal" data-bs-target="#detailsModal-@loan.LoanId">
                                    Info
                                </button>
                            
                            </td>
                        </tr>
                        @* modal de abonos *@
                        <div class="modal fade" id="debtPayment-@loan.LoanId" tabindex="-1" role="dialog" aria-labelledby="detailsModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered" role="document">
                                <div class="modal-content">
                                    <div class="modal-header bet">
                                    <h5 class="modal-title" id="detailsModalLabel">Abonar al préstamo</h5>
                                        <button type="button" class="close align-self-end align-content-end align-items-md-end" data-bs-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <form asp-action="Pay" method="post">
                                            <input type="hidden" name="LoanId" value="@loan.LoanId" />

                                            <div class="form-group">
                                                <label for="amount">Cantidad a Abonar</label>
                                                <input type="number" class="form-control" id="amount" name="amount" step="0.01" min="0" max="@(loan.LoanTotalAmountToPay - loan.LoanTotalPaidCapital)" required />
                                                <small class="form-text text-muted">
                                                    Saldo pendiente: @((loan.LoanTotalAmountToPay - loan.LoanTotalPaidCapital).ToString("C"))
                                                </small>
                                            </div>

                                            <div class="modal-footer">
                                                <div class="form-group form-check">
                                                    <input type="checkbox" class="form-check-input" id="confirmData@loan.LoanId" name="confirmData" required />
                                                    <label class="form-check-label" for="confirmData@loan.LoanId">
                                                        Por favor, confirma que los datos son correctos antes de continuar.
                                                    </label>
                                                    <span class="text-danger" id="confirmDataError" style="display: none;">Debes confirmar que los datos son correctos.</span>
                                                </div>
                                                <br />
                                                <br />
                                                <br />
                                                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancelar</button>

                                                <button type="submit" class="btn btn-primary">Abonar</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @* modal de deltalles *@
                        <div class="modal fade" id="detailsModal-@loan.LoanId" tabindex="-1" role="dialog" aria-labelledby="detailsModalLabel" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                                <div class="modal-content">
                                    <div class="modal-header bet">
                                        <h5 class="modal-title" id="detailsModalLabel">Detalles del préstamo</h5>
                                    <button type="button" class="close align-self-end align-content-end align-items-md-end" data-bs-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                <div class="modal-body align-middle">
                                    <dl class="row align-middle">
                                        <dt class="col-sm-5 border">Monto solicitado</dt>
                                        <dd class="col-sm-7 border">@loan.LoanAmount.ToString("c")</dd>

                                        <dt class="col-sm-5 border">Interés aprobado</dt>
                                        <dd class="col-sm-7 border">@loan.LoanApprovedInterest.ToString("N2") %</dd>

                                        <dt class="col-sm-5 border">Interés moratorio</dt>
                                        <dd class="col-sm-7 border">@loan.LoanLateInterest.ToString("N2") %</dd>

                                        <dt class="col-sm-5 border">Monto total a pagar</dt>
                                        <dd class="col-sm-7 border">@loan.LoanTotalAmountToPay.ToString("C")</dd>

                                        <dt class="col-sm-5 border">Monto total a tagar (moratorio)</dt>
                                        <dd class="col-sm-7 border">@loan.LoanTotalAmountToPayLate.ToString("C")</dd>

                                        <dt class="col-sm-5 border">Capital total pagado</dt>
                                        <dd class="col-sm-7 border">@loan.LoanTotalPaidCapital.ToString("C")</dd>

                                        <dt class="col-sm-5 border">Notas</dt>
                                        <dd class="col-sm-7 border">@loan.LoanNotes</dd>

                                        <dt class="col-sm-5 border">Fecha del último pago</dt>
                                        <dd class="col-sm-7 border">@loan.LoanFinalPaymentDate?.ToString("dd/MM/yyyy")</dd>

                                        <dt class="col-sm-5 border">Fecha del primer pago</dt>
                                        <dd class="col-sm-7 border">
                                            @if (loan.LoanFirstPaymentDate.HasValue)
                                            {
                                                @loan.LoanFirstPaymentDate.Value.ToString("dd/MM/yyyy")
                                            }
                                            else
                                            {
                                                <text>Pagará en la ultima exhibición</text>
                                            }
                                        </dd>

                                        <dt class="col-sm-5 border">Fecha de creación</dt>
                                        <dd class="col-sm-7 border">@loan.CreatedAt.ToString("dd/MM/yyyy HH:mm")</dd>
                                    </dl>
                                    </div>
                                    <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                                </div>
                                </div>
                            </div>
                        </div>
                }
            </tbody>
        </table>

    </div>
</div>
<!-- Modal para Nuevo Préstamo -->
<div class="modal fade" id="newLoanModal" tabindex="-1" aria-labelledby="newLoanModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newLoanModalLabel">Registrar Nuevo Préstamo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="newLoanForm" method="post">
                    <div class="row">
                        <!-- Empleado -->
                        <div class="form-group col-6">
                            <label for="employeeSelect">Empleado</label>
                            <br/>
                            <select class="form-control col-6" id="employeeSelect" name="LoanEmployeeId" required>
                                <option value="">Seleccione un empleado...</option>
                            </select>
                        </div>

                        <!-- Monto del Préstamo -->
                        <div class="form-group col-6">
                            <label for="loanAmount">Monto del Préstamo</label>
                            <input type="number" class="form-control" id="loanAmount" name="LoanAmount" step="0.01" required />
                        </div>

                        <!-- Tipo de Pago -->
                        <div class="form-group col-6">
                            <label for="paymentTypeSelect">Tipo de Pago</label>
                            <br />
                            <select class="form-control col-12" id="paymentTypeSelect" name="LoanPaymentTypeId" required>
                                <option value="">Seleccione un tipo de pago...</option>
                            </select>
                        </div>

                        <!-- Fecha del Primer Pago -->
                        <div class="form-group col-6" id="firstPaymentDateGroup">
                            <label for="firstPaymentDate">Fecha del Primer Pago</label>
                            <input type="date" class="form-control" id="firstPaymentDate" name="LoanFirstPaymentDate" />
                        </div>

                        <!-- Fecha del Último Pago -->
                        <div class="form-group col-6">
                            <label for="finalPaymentDate">Fecha del Último Pago</label>
                            <input type="date" class="form-control" id="finalPaymentDate" name="LoanFinalPaymentDate" />
                        </div>

                        <!-- Intereses Aprobados -->
                        <div class="form-group col-6">
                            <label for="approvedInterest">Interés Aprobado (%)</label>
                            <input type="number" class="form-control" id="approvedInterest" name="LoanApprovedInterest" required />
                        </div>

                        <!-- Intereses Moratorios -->
                        <div class="form-group col-6">
                            <label for="lateInterest">Interés Moratorio (%)</label>
                            <input type="number" class="form-control" id="lateInterest" name="LoanLateInterest" required />
                        </div>

                        <!-- Cantidad Total a Pagar (Calculada) -->
                        <div class="form-group col-6">
                            <label for="totalAmountToPay">Cantidad Total a Pagar</label>
                            <input type="text" class="form-control" id="totalAmountToPay" readonly />
                        </div>

                        <!-- Cantidad Total a Pagar (Moratorio) -->
                        <div class="form-group col-6">
                            <label for="totalAmountToPayLate">Cantidad Total a Pagar (Moratorio)</label>
                            <input type="text" class="form-control" id="totalAmountToPayLate" readonly />
                        </div>

                        <!-- Notas -->
                        <div class="form-group">
                            <label for="loanNotes">Notas</label>
                            <textarea class="form-control" id="loanNotes" name="LoanNotes" rows="3"></textarea>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" id="saveLoanButton">Guardar</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        $(document).ready(function () {
            $('#employeeSelect').select2();
            $('#loansTable').DataTable({
                "responsive": true,
                "paging": true, // Habilitar paginación
                "searching": true, // Habilitar búsqueda
                "ordering": true, // Habilitar ordenamiento
                "info": true, // Mostrar información
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json" // Español
                }
            });
        });
    </script>


    <script>
        $('#newLoanModal').on('show.bs.modal', function () {
            $.ajax({
                url: '@Url.Action("GetEmployeesAndPaymentTypes", "Loans")',
                type: 'GET',
                success: function (data) {
                    console.log(data);
                    // Llenar el select de empleados
                    var employeeSelect = $('#employeeSelect');
                    employeeSelect.empty();
                    employeeSelect.append('<option value="">Seleccione un empleado...</option>');
                    $.each(data.employees, function (index, employee) {
                        employeeSelect.append(`<option value="${employee.employeeId}">${employee.fullName}</option>`);
                    });

                    // Inicializar Select2 después de llenar el select
                    employeeSelect.select2({
                        placeholder: "Buscar empleado...",
                        allowClear: true // Permite limpiar la selección
                    });

                    // Llenar el select de tipos de pago
                    var paymentTypeSelect = $('#paymentTypeSelect');
                    paymentTypeSelect.empty();
                    paymentTypeSelect.append('<option value="">Seleccione un tipo de pago...</option>');
                    $.each(data.paymentTypes, function (index, paymentType) {
                        paymentTypeSelect.append(`<option value="${paymentType.paymentTypeId}">${paymentType.shortName} (${paymentType.description})</option>`);
                    });

                    // Inicializar Select2 para el select de tipos de pago (si lo deseas)
                    paymentTypeSelect.select2({
                        placeholder: "Seleccione un tipo de pago...",
                        allowClear: true
                    });
                },
                error: function () {
                    alert('Error al cargar los datos.');
                }
            });
        });
    </script>

    @* ajax para llenar los campos del empleado y tipos de pago *@
    <script>
        $(document).ready(function () {
            // Cuando el modal se abre, hacer la llamada AJAX
            $('#newLoanModal').on('show.bs.modal', function () {
                $.ajax({
                    url: '@Url.Action("GetEmployeesAndPaymentTypes", "Loans")',
                    type: 'GET',
                    success: function (data) {
                        // Llenar el select de empleados
                        var employeeSelect = $('#employeeSelect');
                        employeeSelect.empty();
                        employeeSelect.append('<option value="">Seleccione un empleado...</option>');
                        $.each(data.employees, function (index, employee) {
                            employeeSelect.append(`<option value="${employee.employeeId}">${employee.fullName}</option>`);
                        });
                        employeeSelect.select2({
                            dropdownParent: $('#newLoanModal') // Esto permite que el modal lo controle
                        });
                        // Llenar el select de tipos de pago
                        var paymentTypeSelect = $('#paymentTypeSelect');
                        paymentTypeSelect.empty();
                        paymentTypeSelect.append('<option value="">Seleccione un tipo de pago...</option>');
                        $.each(data.paymentTypes, function (index, paymentType) {
                            paymentTypeSelect.append(`<option value="${paymentType.paymentTypeId}">${paymentType.shortName} (${paymentType.description})</option>`);
                        });
                        paymentTypeSelect.select2({
                            dropdownParent: $('#newLoanModal')
                        });
                    },
                    error: function () {
                        alert('Error al cargar los datos.');
                    }
                });
            });

            // Guardar el préstamo
            $('#saveLoanButton').click(function () {
                var formData = $('#newLoanForm').serialize();
                $.ajax({
                    url: '@Url.Action("Create", "Loans")',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            $('#newLoanModal').modal('hide');
                            location.reload(); // Recargar la página para ver el nuevo préstamo
                        } else {
                            alert('Errores: ' + response.errors.join(', '));
                        }
                    },
                    error: function () {
                        alert('Error al guardar el préstamo.');
                    }
                });
            });

            $('#newLoanModal').on('hidden.bs.modal', function () {
                $('#employeeSelect').select2('destroy'); // Destruir Select2
                $('#paymentTypeSelect').select2('destroy'); // Destruir Select2 (si lo usaste)
            });

            // Lógica de cálculo y validación
            const loanAmountInput = $('#loanAmount');
            const paymentTypeSelect = $('#paymentTypeSelect');
            const firstPaymentDateGroup = $('#firstPaymentDateGroup');
            const firstPaymentDateInput = $('#firstPaymentDate');
            const finalPaymentDateInput = $('#finalPaymentDate');
            const approvedInterestInput = $('#approvedInterest');
            const lateInterestInput = $('#lateInterest');
            const totalAmountToPayInput = $('#totalAmountToPay');
            const totalAmountToPayLateInput = $('#totalAmountToPayLate');

            // Ocultar/mostrar la fecha del primer pago según el tipo de pago
            paymentTypeSelect.change(function () {
                if (paymentTypeSelect.val() === '5') { // "Al Final"
                    firstPaymentDateGroup.hide();
                    firstPaymentDateInput.removeAttr('required');
                } else {
                    firstPaymentDateGroup.show();
                    firstPaymentDateInput.attr('required', 'required');
                }
            });

            // Calcular la cantidad total a pagar
            function calculateTotalAmount() {
                const loanAmount = parseFloat(loanAmountInput.val()) || 0;
                const approvedInterest = parseFloat(approvedInterestInput.val()) || 0;
                const lateInterest = parseFloat(lateInterestInput.val()) || 0;

                // Calcular el monto total a pagar sin intereses moratorios
                const totalAmount = loanAmount + (loanAmount * (approvedInterest / 100));

                // Calcular el monto total a pagar con intereses moratorios
                const totalAmountLate = totalAmount + (loanAmount * (lateInterest / 100));

                // Mostrar los montos en los campos correspondientes
                totalAmountToPayInput.val(totalAmount.toFixed(2));
                totalAmountToPayLateInput.val(totalAmountLate.toFixed(2));
            }

            // Validar la fecha del último pago
            finalPaymentDateInput.change(function () {
                const firstPaymentDate = new Date(firstPaymentDateInput.val());
                const finalPaymentDate = new Date(finalPaymentDateInput.val());

                if (finalPaymentDate <= firstPaymentDate) {
                    alert('La fecha del último pago debe ser posterior a la fecha del primer pago.');
                    finalPaymentDateInput.val(''); // Limpiar el campo
                }
            });

            // Escuchar cambios en los campos relevantes
            loanAmountInput.on('input', calculateTotalAmount);
            approvedInterestInput.on('input', calculateTotalAmount);
            lateInterestInput.on('input', calculateTotalAmount);

            // Calcular la cantidad total a pagar al cargar la página
            calculateTotalAmount();
        });
    </script>


}